<UserControl x:Class="Digital_twin.UserControls.BuildingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:template="clr-namespace:Digital_twin.Dataset.Support" 
             xmlns:system="clr-namespace:System;assembly=mscorlib" 
             xmlns:local="clr-namespace:Digital_twin.UserControls"
             mc:Ignorable="d">

    <UserControl.Resources>
        <Style TargetType="Line" x:Key="PlaneLine">
            <Setter Property="Stroke" Value="Black"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInner}" Value="True">
                    <Setter Property="StrokeThickness" Value="2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsInner}" Value="False">
                    <Setter Property="StrokeThickness" Value="3"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                        <Condition Binding="{Binding IsInner}" Value="True"/>
                        <Condition Binding="{Binding DataContext.State, RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type local:BuildingView}}}" Value="Edit"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Stroke" Value="#FFB85D31"/>
                    <Setter Property="StrokeThickness" Value="6"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                        <Condition Binding="{Binding IsInner}" Value="False"/>
                        <Condition Binding="{Binding DataContext.State, RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type local:BuildingView}}}" Value="Edit"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Stroke" Value="#FF3453B5"/>
                    <Setter Property="StrokeThickness" Value="6"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Polygon" x:Key="PolygomRoom">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInner}" Value="True">
                    <Setter Property="Fill" Value="DarkTurquoise"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsInner}" Value="False">
                    <Setter Property="Fill" Value="#FF7BBEBE"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                        <Condition Binding="{Binding DataContext.State, RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type local:BuildingView}}}" Value="Edit"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" Value="DarkSeaGreen"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Ellipse" x:Key="PointStyle">
            <Setter Property="Fill" Value="Red"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                        <Condition Binding="{Binding DataContext.State, RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type local:BuildingView}}}" Value="Edit"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" Value="Blue"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="SegmentTemplate">
            <Line Style="{StaticResource PlaneLine}" X1="{Binding Point1.X}" Y1="{Binding Point1.Y}" 
              X2="{Binding Point2.X}" Y2="{Binding Point2.Y}">
                <Line.RenderTransform>
                    <RotateTransform Angle="{Binding ElementName=MySlider, Path=Value}" CenterX="225" CenterY="200"/>
                </Line.RenderTransform>
            </Line>
        </DataTemplate>

        <DataTemplate x:Key="PolygonTemplate">
            <Polygon Style="{StaticResource PolygomRoom}" Points="{Binding Vertices}">
                <Polygon.RenderTransform>
                    <RotateTransform Angle="{Binding ElementName=MySlider, Path=Value}" CenterX="225" CenterY="200"/>
                </Polygon.RenderTransform>
            </Polygon>
        </DataTemplate>

        <DataTemplate x:Key="PointTemplate">
            <Ellipse Style="{StaticResource PointStyle}" Width="5" Height="5">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="{Binding X}" Y="{Binding Y}" />
                        <RotateTransform Angle="{Binding ElementName=MySlider, Path=Value}" CenterX="225" CenterY="200"/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="400"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListBox x:Name="CanvasListBox" ItemsSource="{Binding SelectedLevel.shapes}" SelectedItem="{Binding SelectedShape}" 
                 Height="400" Width="500"
                 HorizontalAlignment="Center" VerticalAlignment="Center"
                 Grid.Row="0">
            <ListBox.Background>
                <ImageBrush ImageSource="{Binding Image}" Stretch="UniformToFill" 
                            Opacity="{Binding ImageOpacity}"/>
            </ListBox.Background>
            
            <ListBox.ItemTemplateSelector>
                <template:ShapeTemplateSelector
                    SegmentTemplate="{StaticResource SegmentTemplate}"
                    PolygonTemplate="{StaticResource PolygonTemplate}" 
                    PointTemplate="{StaticResource PointTemplate}" />
            </ListBox.ItemTemplateSelector>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas Background="Transparent" MouseLeftButtonDown="Canvas_MouseLeftButtonDown"
                            MouseLeftButtonUp="Canvas_MouseLeftButtonUp"
                            MouseMove="Canvas_MouseMove"></Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ListBox>
        <StackPanel Orientation="Horizontal" Grid.Row="1">
            <Label Content="Angle" VerticalAlignment="Center" Margin="10"/>
            <Slider x:Name="MySlider" Minimum="0" Maximum="360" Width="340" VerticalAlignment="Center">
            </Slider>
            <TextBox Text="{Binding ElementName=MySlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                     Width="50" VerticalAlignment="Center" Margin="10"/>
        </StackPanel>
    </Grid>
</UserControl>